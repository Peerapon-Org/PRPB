name: "Destroy Terraform"
description: "Destroy Terraform resources in AWS account"
inputs:
  s3-bucket-name:
    description: "Terraform remote state S3 bucket name"
    required: true
  dynamodb-table-name:
    description: "Terraform remote state DynamoDB table name"
    required: true
  role-arn:
    description: "AWS role to assume for destroying resources"
    required: true
  account-id:
    description: "AWS account ID where the application is"
    required: true
  tfvars-file:
    description: "Path to the tfvars file (relative to the terraform directory)"
    required: true
  domain-name:
    description: "Domain name of the application"
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Assume AWS role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-arn }}
        aws-region: ${{ inputs.aws-region }}
    - name: Init Terraform
      id: init-terraform
      uses: ./.github/actions/init-terraform
      with:
        s3-bucket-name: ${{ inputs.s3-bucket-name }}
        dynamodb-table-name: ${{ inputs.dynamodb-table-name }}
        account-id: ${{ inputs.account-id }}
        domain-name: ${{ inputs.domain-name }}
        tfvars-file: ${{ inputs.tfvars-file }}
    - name: Set GitHub Path
      run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: Run destroy script
      id: destroy
      run: destroy.sh
      shell: bash
      working-directory: ${{ github.workspace }}/terraform
      env:
        S3_BUCKET_NAME: ${{ inputs.s3-bucket-name }}
        DYNAMODB_TABLE_NAME: ${{ inputs.dynamodb-table-name }}
        ACCOUNT_ID: ${{ inputs.account-id }}
        DOMAIN_NAME: ${{ inputs.domain-name }}
        TFVARS_FILE: ${{ steps.init-terraform.outputs.tfvars-file }}
