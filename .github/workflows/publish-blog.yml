name: Publish Blog
run-name: Publish new blog post '${{ github.ref_name }}' (${{ github.sha }})

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  deploy:
    if: |
      startsWith(github.head_ref, 'blog/') &&
      github.event.pull_request.merged == true &&
      contains(github.head_ref, '/skip-ci') == false
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Get target run ID
        id: get-run-id
        uses: actions/github-script@v7
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "test-blog.yml",
              branch: "${{ github.head_ref }}",
              event: "pull_request",
              status: "success",
              per_page: 1
            });
            return runs.data.workflow_runs[0].id;
          result-encoding: string
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: astro-build-blog
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ github.workspace }}/terraform/assets/blog
          run-id: ${{ steps.get-run-id.outputs.result }}
      - name: Publish blog post
        uses: ./.github/actions/publish-blog
        with:
          s3-bucket-name: ${{ vars.TF_REMOTE_STATE_S3_BUCKET }}
          dynamodb-table-name: ${{ vars.TF_REMOTE_STATE_DYNAMODB_TABLE }}
          account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws-region: ${{ vars.AWS_REGION }}
          environment: ${{ vars.STAGE }}
