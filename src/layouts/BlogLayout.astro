---
import "@/styles/globals.css";
import { Header } from "@/components/header/Header";
import { Footer } from "@/components/footer/Footer";
import { Tag } from "@/components/blogs/Tag";
import { TOC } from "@/components/TOC";
import { Image } from "astro:assets";

const { frontmatter, headings } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Bai+Jamjuree:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{frontmatter?.title + " | PRPB"}</title>
    <script>
      const preferredTheme =
        localStorage && localStorage.getItem("PRPB_THEME")
          ? localStorage.getItem("PRPB_THEME")
          : window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";

      if (preferredTheme === "dark")
        document.documentElement.classList.add("dark");

      if (localStorage) {
        const observer = new MutationObserver(() => {
          localStorage.setItem(
            "PRPB_THEME",
            document.documentElement.classList.contains("dark")
              ? "dark"
              : "light"
          );
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </head>
  <body>
    <header>
      <Header client:load />
    </header>
    <main class="2xl:flex">
      <div
        class="w-full 2xl:w-[80%] px-4 md:px-24 break-word whitespace-pre-line text-wrap pt-0 md:pt-[3.4rem] relative"
      >
        <div class="py-4 md:py-6">
          {
            frontmatter?.thumbnail && frontmatter?.thumbnail !== "" && (
              <div class="w-full lg:w-2/3 mx-auto border rounded-xl">
                <Image
                  src={frontmatter?.thumbnail}
                  alt={frontmatter?.title + " thumbnail"}
                  class="rounded-xl select-none"
                  inferSize={true}
                  loading={"eager"}
                />
              </div>
            )
          }
          <div
            class="text-4xl md:text-3xl font-bold py-6 leading-snug md:leading-relaxed"
          >
            {frontmatter?.title}
          </div>
          <div class="flex pb-6 justify-between items-center">
            <div class="flex">
              {
                frontmatter?.category && (
                  <div class="mr-2">
                    <Tag
                      name={frontmatter.category}
                      category={frontmatter.category}
                    />
                  </div>
                )
              }
              {
                frontmatter?.category &&
                  frontmatter?.subcategory &&
                  frontmatter.subcategory.map((subcategory: string) => (
                    <div class="mr-2">
                      <Tag
                        name={subcategory}
                        category={frontmatter.category}
                        subcategory={subcategory}
                      />
                    </div>
                  ))
              }
            </div>
            <p class="text-xs opacity-70">{frontmatter?.date}</p>
          </div>
          <slot />
        </div>
      </div>
      {headings.length > 0 && <TOC client:load headings={headings} />}
    </main>
    <footer>
      <Footer />
    </footer>
  </body>
</html>

<style is:global>
  html,
  body {
    margin: 0;
    min-height: 100vh;
    position: relative;
    box-sizing: border-box;
    font-size: clamp(16px, 2.5vw, 18px);
    font-family: "Bai Jamjuree", serif;
    font-weight: 500;
    font-optical-sizing: auto;
    font-style: normal;
    letter-spacing: 0.8px;
    line-height: 1.8;
  }

  p {
    word-break: break-word;
    white-space: normal;
  }
</style>
